name: Build and Deploy GreenU API

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'  # Adaptez à votre version exacte
  PROJECT_PATH: 'greenUDB/GreenUAPI.csproj'  # Chemin relatif depuis la racine
  PUBLISH_OUTPUT_DIR: './publish'  # Dossier de sortie

jobs:
  build-and-deploy:
    runs-on: windows-latest  # Nécessaire pour les Web Apps Windows

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build with dotnet
      run: |
        dotnet restore ${{ env.PROJECT_PATH }}
        dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore
        dotnet publish ${{ env.PROJECT_PATH }} -c Release -o ${{ env.PUBLISH_OUTPUT_DIR }} --no-build

    - name: Verify publish output
      run: |
        ls ${{ env.PUBLISH_OUTPUT_DIR }}
        if (!(Test-Path "${{ env.PUBLISH_OUTPUT_DIR }}/GreenUAPI.dll")) {
            Write-Host "::error::Fichier DLL manquant !"
            exit 1
        }
      shell: pwsh

    - name: Zip artifacts
      run: |
        Compress-Archive -Path "${{ env.PUBLISH_OUTPUT_DIR }}/*" -DestinationPath "./deploy.zip" -Force
      shell: pwsh

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        package: ./deploy.zip
        resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
        slot-name: 'Production'
