# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - GreenU

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Vérification du contenu du package
        run: ls -R published_app

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Build with dotnet
        run: dotnet build greenUDB/GreenUApi.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish greenUDB/GreenUApi.csproj -c Release -o "${{ github.workspace }}/published_app"

      - name: Vérifier le contenu du dossier publié
        run: Get-ChildItem "${{ github.workspace }}/published_app" -Recurse
        shell: pwsh

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ github.workspace }}/published_app
          
      - name: Lister les fichiers générés
        run: ls -R

      - name: Vérifier le contenu avant compression
        run: ls -R published_app
      
      - name: Créer un fichier ZIP propre
        run: |
          Remove-Item -Force published_app.zip -ErrorAction Ignore
          Compress-Archive -Path published_app/* -DestinationPath published_app.zip
        shell: pwsh
      
      - name: Vérifier le fichier ZIP
        run: unzip -l published_app.zip
        
      - name: Vérifier les fichiers après la création du ZIP
        run: ls -R . # Afficher les fichiers dans le répertoire courant pour vérifier la présence du fichier ZIP


      - name: Vérifier l'intégrité du fichier ZIP
        run: |
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          try {
            [System.IO.Compression.ZipFile]::OpenRead("published_app.zip").Dispose()
            Write-Host "✅ Le fichier ZIP est valide"
          } catch {
            Write-Host "❌ Le fichier ZIP est corrompu"
            exit 1
          }
        shell: pwsh

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          
      - name: Vérifier les fichiers après téléchargement
        run: ls -R

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_011C3F26CC2040A1B6404AC04C50F6FD }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BE441480952545C6B739805513D0B40A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C4A3CFBA85F549C7A321609D8B9CF832 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'GreenU'
          slot-name: 'Production'
          package: published_app.zip
          
